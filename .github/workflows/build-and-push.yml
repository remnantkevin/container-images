name: Build and push image

on:
  workflow_dispatch:
    inputs:
      directory:
        type: string
        required: true

env:
  REGISTRY: ghcr.io
  INPUT_DIRECTORY: ${{ inputs.directory }}
  IMAGE_NAME: ${{ github.repository }}/${{ inputs.directory }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.4.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.9.0
      - name: Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          # Handles 'latest' tag
          flavor: |
            latest=true
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            {{date 'YYYYMMDD'}}
            {{date 'YYYYMM'}}
            {{date 'YYYY'}}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=${{ env.IMAGE_NAME }}
            org.opencontainers.image.licenses=MIT
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6.13.0
        with:
          context: ${{ env.INPUT_DIRECTORY }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2.2.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
